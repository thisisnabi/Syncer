// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Syncer.APIs.Persistence;

#nullable disable

namespace Syncer.APIs.Persistence.Migrations
{
    [DbContext(typeof(SyncerDbContext))]
    [Migration("20240912140345_AddEmojiEntity")]
    partial class AddEmojiEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Syncer.APIs.Models.Domain.Emoji", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Code");

                    b.ToTable("Emojis");
                });

            modelBuilder.Entity("Syncer.APIs.Models.Domain.Presentation", b =>
                {
                    b.Property<string>("Id")
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Speaker")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("Syncer.APIs.Models.Domain.Presentation", b =>
                {
                    b.OwnsMany("Syncer.APIs.Models.Domain.Milestone", "Milestones", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("PresentationId")
                                .IsRequired()
                                .HasColumnType("varchar(900)");

                            b1.Property<int>("Status")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(100)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("PresentationId");

                            b1.ToTable("Milestones", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PresentationId");

                            b1.OwnsMany("Syncer.APIs.Models.Domain.MilestoneEmoji", "Emojis", b2 =>
                                {
                                    b2.Property<long>("MilestoneId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ShortName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("MilestoneId", "Id");

                                    b2.ToTable("MilestoneEmojis", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("MilestoneId");
                                });

                            b1.OwnsMany("Syncer.APIs.Models.Domain.Reaction", "Reactions", b2 =>
                                {
                                    b2.Property<long>("MilestoneId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("EmojiCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Username")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("MilestoneId", "Id");

                                    b2.ToTable("MilestoneReactions", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("MilestoneId");
                                });

                            b1.Navigation("Emojis");

                            b1.Navigation("Reactions");
                        });

                    b.OwnsMany("Syncer.APIs.Models.Domain.PresentationJoiner", "Joiners", b1 =>
                        {
                            b1.Property<string>("PresentationId")
                                .HasColumnType("varchar(900)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PresentationId", "Id");

                            b1.ToTable("Presentations");

                            b1.ToJson("Joiners");

                            b1.WithOwner()
                                .HasForeignKey("PresentationId");
                        });

                    b.Navigation("Joiners");

                    b.Navigation("Milestones");
                });
#pragma warning restore 612, 618
        }
    }
}
